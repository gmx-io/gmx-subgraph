specVersion: 0.0.2
description: MPX
repository: https://github.com/gmx-io/gmx-subgraph
schema:
  file: ./schema.graphql

dataSources:
  - kind: ethereum/contract
    name: ChainlinkAggregatorBTC
    network: arbitrum-one
    source:
      address: "0x942d00008D658dbB40745BBEc89A93c253f9B882"
      abi: ChainlinkAggregator
      startBlock: 225000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedBTC
      file: ./src/pricesMapping.ts
  - kind: ethereum/contract
    name: ChainlinkAggregatorETH
    network: arbitrum-one
    source:
      address: "0x3607e46698d218B3a5Cae44bF381475C0a5e2ca7"
      abi: ChainlinkAggregator
      startBlock: 225000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedETH
      file: ./src/pricesMapping.ts
  - kind: ethereum/contract
    name: ChainlinkAggregatorUNI
    network: arbitrum-one
    source:
      address: "0xeFc5061B7a8AeF31F789F1bA5b3b8256674F2B71"
      abi: ChainlinkAggregator
      startBlock: 225000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedUNI
      file: ./src/pricesMapping.ts
  - kind: ethereum/contract
    name: ChainlinkAggregatorLINK
    network: arbitrum-one
    source:
      address: "0x9b8DdcF800a7BfCdEbaD6D65514dE59160a2C9CC"
      abi: ChainlinkAggregator
      startBlock: 225000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedLINK
      file: ./src/pricesMapping.ts
  - kind: ethereum/contract
    name: ChainlinkAggregatorSPELL
    network: arbitrum-one
    source:
      address: "0x4b3f43e086790a71270750192472fb61df7e8566"
      abi: ChainlinkAggregator
      startBlock: 2372599
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedSPELL
      file: ./src/pricesMapping.ts
  - kind: ethereum/contract
    name: ChainlinkAggregatorSUSHI
    network: arbitrum-one
    source:
      address: "0x0d02b6eba98bda364953d9b1def8eedc19ffd516"
      abi: ChainlinkAggregator
      startBlock: 226756
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedSUSHI
      file: ./src/pricesMapping.ts
  - kind: ethereum/contract
    name: ChainlinkAggregatorDAI
    network: arbitrum-one
    source:
      address: "0xfc06bb03a9e1d8033f87ea6a682cbd65477a43b9"
      abi: ChainlinkAggregator
      startBlock: 226756
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedDAI
      file: ./src/pricesMapping.ts
  - kind: ethereum/contract
    name: ChainlinkAggregatorMIM
    network: arbitrum-one
    source:
      address: "0x0ae17556f9698fc47c365a746ab9cddcb17f3809"
      abi: ChainlinkAggregator
      startBlock: 226756
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedMIM
      file: ./src/pricesMapping.ts

  - kind: ethereum/contract
    name: GlpManager
    network: arbitrum-one
    source:
      address: "0x321F653eED006AD1C29D174e17d96351BDe22649"
      abi: GlpManager
      startBlock: 225000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - HourlyGlpStat
      abis:
        - name: GlpManager
          file: ./abis/GlpManager.json
      eventHandlers:
        - event: AddLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleAddLiquidity
        - event: RemoveLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleRemoveLiquidity
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: GlpManager2
    network: arbitrum-one
    source:
      address: "0x3963FfC9dff443c2A94f21b129D429891E32ec18"
      abi: GlpManager
      startBlock: 40559781
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - HourlyGlpStat
      abis:
        - name: GlpManager
          file: ./abis/GlpManager.json
      eventHandlers:
        - event: AddLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleAddLiquidity
        - event: RemoveLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleRemoveLiquidity
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: OrderBook
    network: arbitrum-one
    source:
      address: "0x09f77E8A13De9a35a7231028187e9fD5DB8a2ACB"
      abi: OrderBook
      startBlock: 2329453
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Order
      abis:
        - name: OrderBook
          file: ./abis/OrderBook.json
      eventHandlers:
        - event: CreateIncreaseOrder(indexed address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256)
          handler: handleCreateIncreaseOrder
        - event: CancelIncreaseOrder(indexed address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256)
          handler: handleCancelIncreaseOrder
        - event: ExecuteIncreaseOrder(indexed address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256,uint256)
          handler: handleExecuteIncreaseOrder

        - event: CreateDecreaseOrder(indexed address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256)
          handler: handleCreateDecreaseOrder
        - event: CancelDecreaseOrder(indexed address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256)
          handler: handleCancelDecreaseOrder
        - event: ExecuteDecreaseOrder(indexed address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256,uint256)
          handler: handleExecuteDecreaseOrder

        - event: CreateSwapOrder(indexed address,uint256,address[],uint256,uint256,uint256,bool,bool,uint256)
          handler: handleCreateSwapOrder
        - event: CancelSwapOrder(indexed address,uint256,address[],uint256,uint256,uint256,bool,bool,uint256)
          handler: handleCancelSwapOrder
        - event: ExecuteSwapOrder(indexed address,uint256,address[],uint256,uint256,uint256,uint256,bool,bool,uint256)
          handler: handleExecuteSwapOrder
      file: ./src/ordersMapping.ts

  - kind: ethereum/contract
    name: FastPriceFeed
    network: arbitrum-one
    source:
      address: "0x73fE72C9cAA0fAf0e488570D5898984783E728Df"
      abi: FastPriceFeed
      startBlock: 1326270
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - FastPrice
      abis:
        - name: FastPriceFeed
          file: ./abis/FastPriceFeed.json
      eventHandlers:
        - event: SetPrice(address,uint256)
          handler: handleSetPrice
      file: ./src/pricesMapping.ts

  - kind: ethereum/contract
    name: FastPriceEvents
    network: arbitrum-one
    source:
      address: "0x4530b7DE1958270A2376be192a24175D795e1b07"
      abi: FastPriceEvents
      startBlock: 3716732
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - FastPrice
      abis:
        - name: FastPriceEvents
          file: ./abis/FastPriceEvents.json
      eventHandlers:
        - event: PriceUpdate(address,uint256,address)
          handler: handlePriceUpdate
      file: ./src/pricesMapping.ts

  - kind: ethereum/contract
    name: UniswapPool
    network: arbitrum-one
    source:
      address: "0x80A9ae39310abf666A87C743d6ebBD0E8C42158E"
      abi: UniswapPoolV3
      startBlock: 200000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - UniswapPrice
      abis:
        - name: UniswapPoolV3
          file: ./abis/UniswapPoolV3.json
      eventHandlers:
        - event: Swap(indexed address,indexed address,int256,int256,uint160,uint128,int24)
          handler: handleUniswapGmxEthSwap
      file: ./src/pricesMapping.ts

  - kind: ethereum/contract
    name: FeeGmxRewardDistributor
    network: arbitrum-one
    source:
      address: "0x1DE098faF30bD74F22753c28DB17A2560D4F5554"
      abi: RewardDistributor
      startBlock: 218204
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - GmxStat
      abis:
        - name: RewardDistributor
          file: ./abis/RewardDistributor.json
      eventHandlers:
        - event: Distribute(uint256)
          handler: handleDistributeEthToGmx
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: EsgmxGmxRewardDistributor
    network: arbitrum-one
    source:
      address: "0x23208B91A98c7C1CD9FE63085BFf68311494F193"
      abi: RewardDistributor
      startBlock: 218204
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - GmxStat
      abis:
        - name: RewardDistributor
          file: ./abis/RewardDistributor.json
      eventHandlers:
        - event: Distribute(uint256)
          handler: handleDistributeEsgmxToGmx
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: FeeGlpRewardDistributor
    network: arbitrum-one
    source:
      address: "0x5C04a12EB54A093c396f61355c6dA0B15890150d"
      abi: RewardDistributor
      startBlock: 218204
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - GmxStat
      abis:
        - name: RewardDistributor
          file: ./abis/RewardDistributor.json
      eventHandlers:
        - event: Distribute(uint256)
          handler: handleDistributeEthToGlp
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: EsgmxGlpRewardDistributor
    network: arbitrum-one
    source:
      address: "0x60519b48ec4183a61ca2B8e37869E675FD203b34"
      abi: RewardDistributor
      startBlock: 218208
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - GmxStat
      abis:
        - name: RewardDistributor
          file: ./abis/RewardDistributor.json
      eventHandlers:
        - event: Distribute(uint256)
          handler: handleDistributeEsgmxToGlp
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: Vault2
    network: arbitrum-one
    source:
      address: "0x489ee077994B6658eAfA855C308275EAd8097C4A"
      abi: Vault
      startBlock: 225000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - TradingStat
      abis:
        - name: Vault
          file: ./abis/VaultV2.json
      eventHandlers:
        - event: ClosePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256)
          handler: handleClosePosition
        - event: IncreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleIncreasePosition
        - event: DecreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleDecreasePosition
        - event: LiquidatePosition(bytes32,address,address,address,bool,uint256,uint256,uint256,int256,uint256)
          handler: handleLiquidatePosition
      file: ./src/tradingMapping.ts

  - kind: ethereum/contract
    name: Vault
    network: arbitrum-one
    source:
      address: "0x489ee077994B6658eAfA855C308275EAd8097C4A"
      abi: Vault
      startBlock: 227091
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Swap
        - IncreasePosition
        - DecreasePosition
        - HourlyVolume
        - HourlyVolumeBySource
        - HourlyVolumeByToken
        - HourlyFee
        - Transaction
        - FundingFee
      abis:
        - name: Vault
          file: ./abis/VaultV2.json
      # callHandlers: # doesn't work on Arbitrum
      #   - function: setTokenConfig(address,uint256,uint256,uint256,uint256,bool,bool)
      #     handler: handleSetTokenConfig
      eventHandlers:
        - event: UpdateFundingRate(address,uint256)
          handler: handleUpdateFundingRate
        - event: Swap(address,address,address,uint256,uint256,uint256,uint256)
          handler: handleSwap
        - event: CollectMarginFees(address,uint256,uint256)
          handler: handleCollectMarginFees
        - event: BuyUSDG(address,address,uint256,uint256,uint256)
          handler: handleBuyUSDG
        - event: SellUSDG(address,address,uint256,uint256,uint256)
          handler: handleSellUSDG
        - event: IncreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleIncreasePosition
        - event: DecreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleDecreasePosition
        - event: UpdatePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256)
          handler: handleUpdatePosition
        - event: LiquidatePosition(bytes32,address,address,address,bool,uint256,uint256,uint256,int256,uint256)
          handler: handleLiquidatePosition
        - event: IncreasePoolAmount(address,uint256)
          handler: handleIncreasePoolAmount
        - event: DecreasePoolAmount(address,uint256)
          handler: handleDecreasePoolAmount
        - event: IncreaseReservedAmount(address,uint256)
          handler: handleIncreaseReservedAmount
        - event: DecreaseReservedAmount(address,uint256)
          handler: handleDecreaseReservedAmount
        - event: IncreaseUsdgAmount(address,uint256)
          handler: handleIncreaseUsdgAmount
        - event: DecreaseUsdgAmount(address,uint256)
          handler: handleDecreaseUsdgAmount
      file: ./src/mapping.ts
