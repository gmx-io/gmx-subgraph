specVersion: 0.0.4
description: Morphex
repository: https://github.com/morphex-labs/morphex-subgraph
schema:
  file: ./schema.graphql

dataSources:
# Transfers
  - kind: ethereum/contract
    name: transferGmx
    network: fantom
    source:
      address: "0x66eed5ff1701e6ed8470dc391f05e27b1d0657eb"
      abi: ERC20
      startBlock: 54647659
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Transfer
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleGmxTransfer
      file: ./src/arbitrum/reward.ts
  - kind: ethereum/contract
    name: transferGlp
    network: fantom
    source:
      address: "0xF476F7F88E70470c976d9DF7c5C003dB1E1980Cb"
      abi: ERC20
      startBlock: 66183039
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Transfer
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleGlpTransfer
      file: ./src/arbitrum/reward.ts
  - kind: ethereum/contract
    name: transferEsGmx
    network: fantom
    source:
      address: "0xe0f606e6730bE531EeAf42348dE43C2feeD43505"
      abi: ERC20
      startBlock: 56915731
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Transfer
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleEsGmxTransfer
      file: ./src/arbitrum/reward.ts
# Trackers
  - kind: ethereum/contract
    name: FeeGmxTrackerClaim
    network: fantom
    source:
      address: "0x2d5875ab0efb999c1f49c798acb9efbd1cfbf63c"
      abi: RewardTracker
      startBlock: 56916319
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Claim
      abis:
        - name: RewardTracker
          file: ./abis/RewardTracker.json
      eventHandlers:
        - event: Claim(address,uint256)
          handler: handleClaimFees
      file: ./src/arbitrum/reward.ts
  - kind: ethereum/contract
    name: FeeGlpTrackerClaim
    network: fantom
    source:
      address: "0x0Af7E9F3396423C30a4dF4a79882d118ea89e2F2"
      abi: RewardTracker
      startBlock: 66187092
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Claim
      abis:
        - name: RewardTracker
          file: ./abis/RewardTracker.json
      eventHandlers:
        - event: Claim(address,uint256)
          handler: handleClaimFees
      file: ./src/arbitrum/reward.ts
# Chainlink aggregators
  - kind: ethereum/contract
    name: ChainlinkAggregatorBTC
    network: fantom
    source:
      address: "0x472105bB154bD92580a9669AB2483864c3dE9974"
      abi: ChainlinkAggregator
      startBlock: 55091519
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedBTC
      file: ./src/arbitrum/tokenPrice.ts
  - kind: ethereum/contract
    name: ChainlinkAggregatorETH
    network: fantom
    source:
      address: "0x50f8339E5668F85Bcb4D8DF987C12b7Df4c99084"
      abi: ChainlinkAggregator
      startBlock: 55091519
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedETH
      file: ./src/arbitrum/tokenPrice.ts
  - kind: ethereum/contract
    name: ChainlinkAggregatorFTM
    network: fantom
    source:
      address: "0xd62d2aFe0196Ef7A80836F74f420B7E8976f46aE"
      abi: ChainlinkAggregator
      startBlock: 55091519
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedFTM
      file: ./src/arbitrum/tokenPrice.ts
# Morphex contracts
  - kind: ethereum/contract
    name: FastPriceFeed
    network: fantom
    source:
      address: "0xDc7C389be5da32e326A261dC0126feCa7AE04d79"
      abi: FastPriceEvents
      startBlock: 66190051
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - PriceUpdate
      abis:
        - name: FastPriceEvents
          file: ./abis/FastPriceEvents.json
      eventHandlers:
        - event: PriceUpdate(address,uint256,address)
          handler: handleFastPriceEvent
      file: ./src/arbitrum/tokenPrice.ts
  - kind: ethereum/contract
    name: GmxPrice
    network: fantom
    source:
      address: "0xdE26e98d868FE02fFfb6DF26E638995124d3Ca13"
      abi: UniswapPoolV3
      startBlock: 55091519
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Sync
      abis:
        - name: UniswapPoolV3
          file: ./abis/UniswapPoolV3.json
      eventHandlers:
        - event: Sync(uint256,uint256)
          handler: handleEqualizerMpxFtmSwap
      file: ./src/arbitrum/tokenPrice.ts
  - kind: ethereum/contract
    name: GlpManager
    network: fantom
    source:
      address: "0x3A15Bac2D87C89F08147353fc9aE27080631b73d"
      abi: GlpManager
      startBlock: 66183064
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Pricefeed
      abis:
        - name: GlpManager
          file: ./abis/GlpManager.json
      eventHandlers:
        - event: AddLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleAddLiquidity
        - event: RemoveLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleRemoveLiquidity
      file: ./src/arbitrum/tokenPrice.ts
  - kind: ethereum/contract
    name: positionRouter
    network: fantom
    source:
      address: "0x5D90059b8116906bF8c1c7B7E3920A4b6e9DF4dB"
      abi: positionRouter
      startBlock: 66183273
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ReferralAdjustment
      abis:
        - name: positionRouter
          file: ./abis/PositionRouter.json
      eventHandlers:
        - event: IncreasePositionReferral(address,uint256,uint256,bytes32,address)
          handler: handleIncreasePositionReferral
        - event: DecreasePositionReferral(address,uint256,uint256,bytes32,address)
          handler: handleDecreasePositionReferral
      file: ./src/trading.ts
  - kind: ethereum/contract
    name: gmxVault
    network: fantom
    source:
      address: "0x245cD6d33578de9aF75a3C0c636c726b1A8cbdAa"
      abi: gmxVault
      startBlock: 66181775
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ClosePosition
        - DecreasePosition
        - IncreasePosition
        - LiquidatePosition
        - UpdatePosition
        - Trade
      abis:
        - name: gmxVault
          file: ./abis/Vault-avalanche.json
        - name: ReferralStorage
          file: ./abis/ReferralStorage.json
      eventHandlers:
        - event: ClosePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256)
          handler: handleClosePosition
        - event: DecreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleDecreasePosition
        - event: IncreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleIncreasePosition
        - event: LiquidatePosition(bytes32,address,address,address,bool,uint256,uint256,uint256,int256,uint256)
          handler: handleLiquidatePosition
        - event: UpdatePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256,uint256)
          handler: handleUpdatePosition
      file: ./src/trading.ts



