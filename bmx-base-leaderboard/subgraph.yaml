specVersion: 0.0.4
description: Morphex
repository: https://github.com/morphex-labs/morphex-subgraph
schema:
  file: ./schema.graphql

dataSources:
# Transfers
  - kind: ethereum/contract
    name: transferGmx
    network: base
    source:
      address: "0x548f93779fbc992010c07467cbaf329dd5f059b7"
      abi: ERC20
      startBlock: 3079012
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Transfer
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleGmxTransfer
      file: ./src/arbitrum/reward.ts
  - kind: ethereum/contract
    name: transferGlp
    network: base
    source:
      address: "0xe771b4E273dF31B85D7A7aE0Efd22fb44BdD0633"
      abi: ERC20
      startBlock: 3007402
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Transfer
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleGlpTransfer
      file: ./src/arbitrum/reward.ts
  - kind: ethereum/contract
    name: transferEsGmx
    network: base
    source:
      address: "0x3Ff7AB26F2dfD482C40bDaDfC0e88D01BFf79713"
      abi: ERC20
      startBlock: 3590191
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Transfer
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleEsGmxTransfer
      file: ./src/arbitrum/reward.ts
# Trackers
  # - kind: ethereum/contract
  #   name: FeeGmxTrackerClaim
  #   network: base
  #   source:
  #     address: "0xfAEdbA0E97D5DCD7A29fB6778D7e17b1be35c0b8"
  #     abi: RewardTracker
  #     startBlock: 28986543
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.6
  #     language: wasm/assemblyscript
  #     entities:
  #       - Claim
  #     abis:
  #       - name: RewardTracker
  #         file: ./abis/RewardTracker.json
  #     eventHandlers:
  #       - event: Claim(address,uint256)
  #         handler: handleClaimFees
  #     file: ./src/arbitrum/reward.ts
#  - kind: ethereum/contract
#    name: FeeGlpTrackerClaim
#    network: base
#    source:
#      address: "0xa2242d0A8b0b5c1A487AbFC03Cd9FEf6262BAdCA"
#      abi: RewardTracker
#      startBlock: 3098894
#    mapping:
#      kind: ethereum/events
#      apiVersion: 0.0.6
#      language: wasm/assemblyscript
#      entities:
#        - Claim
#      abis:
#        - name: RewardTracker
#          file: ./abis/RewardTracker.json
#      eventHandlers:
#        - event: Claim(address,uint256)
#          handler: handleClaimFees
#      file: ./src/arbitrum/reward.ts

# Chainlink aggregators
  - kind: ethereum/contract
    name: ChainlinkAggregatorBTC
    network: base
    source:
      address: "0xE186722b9d5C063625C49a4BF6Bb3d669F66A8b5"
      abi: ChainlinkAggregator
      startBlock: 2095708
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedBTC
      file: ./src/arbitrum/tokenPrice.ts

  - kind: ethereum/contract
    name: ChainlinkAggregatorETH
    network: base
    source:
      address: "0x57d2d46Fc7ff2A7142d479F2f59e1E3F95447077"
      abi: ChainlinkAggregator
      startBlock: 2092836
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedETH
      file: ./src/arbitrum/tokenPrice.ts

  - kind: ethereum/contract
    name: ChainlinkAggregatorcbETH
    network: base
    source:
      address: "0x330eC3210511cC8f5A87A737A08905092e033AF3"
      abi: ChainlinkAggregator
      startBlock: 3617582
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedcbETH
      file: ./src/arbitrum/tokenPrice.ts

  - kind: ethereum/contract
    name: ChainlinkAggregatorYFI
    network: base
    source:
      address: "0xdB793acA8bE40a123c34300Bb21b02F21F8ef501"
      abi: ChainlinkAggregator
      startBlock: 4605366
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedYFI
      file: ./src/arbitrum/tokenPrice.ts

  - kind: ethereum/contract
    name: ChainlinkAggregatorAERO
    network: base
    source:
      address: "0xC18cC9B106A50D945024F0a25EfF16B6dC56D4B9"
      abi: ChainlinkAggregator
      startBlock: 12730214
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedAERO
      file: ./src/arbitrum/tokenPrice.ts

  - kind: ethereum/contract
    name: ChainlinkAggregatorMOG
    network: base
    source:
      address: "0xeCA1EBFb5CA472C76328f5DdE011c6CcCF2a66F4"
      abi: ChainlinkAggregator
      startBlock: 17868792
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedMOG
      file: ./src/arbitrum/tokenPrice.ts

  - kind: ethereum/contract
    name: ChainlinkAggregatorEURC
    network: base
    source:
      address: "0xc95cd3490be4af06F0A25435e21C2c91B988C482"
      abi: ChainlinkAggregator
      startBlock: 18129621
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedEURC
      file: ./src/arbitrum/tokenPrice.ts

  - kind: ethereum/contract
    name: ChainlinkAggregatorcbBTC
    network: base
    source:
      address: "0x52A12E019826C53B1f7Fd3E6D9546c0935377B95"
      abi: ChainlinkAggregator
      startBlock: 19730443
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedcbBTC
      file: ./src/arbitrum/tokenPrice.ts

  - kind: ethereum/contract
    name: ChainlinkAggregatorWELL
    network: base
    source:
      address: "0xcAd16df709bFe62D02cde5d4039684fA47Dc216c"
      abi: ChainlinkAggregator
      startBlock: 22416066
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedWELL
      file: ./src/arbitrum/tokenPrice.ts

# Morphex contracts
  - kind: ethereum/contract
    name: FastPriceFeed
    network: base
    source:
      address: "0x662B64186B50d5346321cf4740119EF04A72De27"
      abi: FastPriceEvents
      startBlock: 3009046
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - PriceUpdate
      abis:
        - name: FastPriceEvents
          file: ./abis/FastPriceEvents.json
      eventHandlers:
        - event: PriceUpdate(address,uint256,address)
          handler: handleFastPriceEvent
      file: ./src/arbitrum/tokenPrice.ts
  - kind: ethereum/contract
    name: GmxPrice
    network: base
    source:
      address: "0xd272920B2b4eBeE362a887451EDBd6d68A76E507"
      abi: UniswapPoolV3
      startBlock: 3517295
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Sync
      abis:
        - name: UniswapPoolV3
          file: ./abis/UniswapPoolV3.json
      eventHandlers:
        - event: Sync(uint256,uint256)
          handler: handleEqualizerMpxFtmSwap
      file: ./src/arbitrum/tokenPrice.ts
  - kind: ethereum/contract
    name: GlpManager
    network: base
    source:
      address: "0x9fAc7b75f367d5B35a6D6D0a09572eFcC3D406C5"
      abi: GlpManager
      startBlock: 3007412
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Pricefeed
      abis:
        - name: GlpManager
          file: ./abis/GlpManager.json
      eventHandlers:
        - event: AddLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleAddLiquidity
        - event: RemoveLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleRemoveLiquidity
      file: ./src/arbitrum/tokenPrice.ts
  - kind: ethereum/contract
    name: positionRouter
    network: base
    source:
      address: "0x927F9c03d1Ac6e2630d31E614F226b5Ed028d443"
      abi: positionRouter
      startBlock: 3008284
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ReferralAdjustment
      abis:
        - name: positionRouter
          file: ./abis/PositionRouter.json
      eventHandlers:
        - event: IncreasePositionReferral(address,uint256,uint256,bytes32,address)
          handler: handleIncreasePositionReferral
        - event: DecreasePositionReferral(address,uint256,uint256,bytes32,address)
          handler: handleDecreasePositionReferral
      file: ./src/trading.ts
  - kind: ethereum/contract
    name: gmxVault
    network: base
    source:
      address: "0xec8d8D4b215727f3476FF0ab41c406FA99b4272C"
      abi: gmxVault
      startBlock: 3007377
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ClosePosition
        - DecreasePosition
        - IncreasePosition
        - LiquidatePosition
        - UpdatePosition
        - Trade
      abis:
        - name: gmxVault
          file: ./abis/Vault-avalanche.json
        - name: ReferralStorage
          file: ./abis/ReferralStorage.json
      eventHandlers:
        - event: ClosePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256)
          handler: handleClosePosition
        - event: DecreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleDecreasePosition
        - event: IncreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleIncreasePosition
        - event: LiquidatePosition(bytes32,address,address,address,bool,uint256,uint256,uint256,int256,uint256)
          handler: handleLiquidatePosition
        - event: UpdatePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256,uint256)
          handler: handleUpdatePosition
      file: ./src/trading.ts
